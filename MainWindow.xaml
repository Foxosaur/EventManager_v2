<Window
    x:Class="WPF_test.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WPF_test"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:staticData="clr-namespace:WPF_test"
    Title="Event Manager v2"
    Width="1000"
    Height="600"
    mc:Ignorable="d">
    <Window.Resources>
        <staticData:TypeFunctionList x:Key="TypeFunctionList" />
        <staticData:FunctionList x:Key="FunctionList" />
    </Window.Resources>
    <Grid>
        <TextBox AcceptsReturn="True" />

        <Menu>
            <MenuItem
                Width="Auto"
                Height="37"
                Header="_File">
                <MenuItem Header="_New" />
                <MenuItem Click="LoadEVTFile_Click" Header="_Open" />
                <MenuItem Header="_Save" />
                <Separator />
                <MenuItem Header="_Exit" />
            </MenuItem>
            <MenuItem
                Width="Auto"
                Height="37"
                Header="_Database">
                <MenuItem Click="Config_DB_Click" Header="_Configure SQL Connection" />
            </MenuItem>
            <MenuItem
                Width="Auto"
                Height="37"
                Header="_Help">
                <MenuItem Click="LoadGlossaryHelpFile_Click" Header="_with Function Glossary" />
            </MenuItem>

        </Menu>
        <Button
            Margin="920,516,10,10"
            Click="SavetoFile_Click"
            Content="Save"
            RenderTransformOrigin="0.5,0.5" />
        <DataGrid
            x:Name="moomin"
            Margin="10,47,45,153"
            AllowDrop="True"
            AlternatingRowBackground="#FFF7F1F1"
            AutoGenerateColumns="False"
            RenderTransformOrigin="0.5,0.5"
            ScrollViewer.CanContentScroll="True"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            SelectionChanged="moomin_SelectionChanged">

            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="Row_DoubleClick" />
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn
                    x:Name="dataGridTextColumn"
                    Binding="{Binding ID, UpdateSourceTrigger=PropertyChanged}"
                    Header="ID" />

                <DataGridTextColumn Binding="{Binding Note, UpdateSourceTrigger=PropertyChanged}" Header="Your notes">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="General rule: - Whenever you add a note ensure it has a ; at the start/ &#xA;&#xA;If you dont, the file may appear to save fine but loading it into your Soma server will cause an error." />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridComboBoxColumn
                    Header="Type"
                    ItemsSource="{StaticResource TypeFunctionList}"
                    SelectedItemBinding="{Binding TypeFunction}">
                    <DataGridComboBoxColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="ToolTip" Value="General rule: -&#xA;A - Check or Requirement&#xA;E - DO Something like run an event&#xA;O - Make a change like players max HP&#xA;&#xA; And remember A lines mostly comes before E events and O probably last. &#xA;&#xA;Why? Because you usually want 'requirements (A) before doing anything like a level requirement or a item requirement or having a certain quest." />
                        </Style>
                    </DataGridComboBoxColumn.HeaderStyle>
                </DataGridComboBoxColumn>
                <DataGridTextColumn
                    x:Name="dataGridComboBoxColumn"
                    Header="Function"
                    Binding="{Binding Function}">

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <Trigger Property="Text" Value="END">
                                    <Setter Property="Background" Value="LightSalmon" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding FunctionParams[0], UpdateSourceTrigger=PropertyChanged}" Header="Value 1 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[1], UpdateSourceTrigger=PropertyChanged}" Header="Value 2 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[2], UpdateSourceTrigger=PropertyChanged}" Header="Value 3 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[3], UpdateSourceTrigger=PropertyChanged}" Header="Value 4 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[4], UpdateSourceTrigger=PropertyChanged}" Header="Value 5 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[5], UpdateSourceTrigger=PropertyChanged}" Header="Value 6 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[6], UpdateSourceTrigger=PropertyChanged}" Header="Value 7 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[7], UpdateSourceTrigger=PropertyChanged}" Header="Value 8 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[8], UpdateSourceTrigger=PropertyChanged}" Header="Value 9 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[9], UpdateSourceTrigger=PropertyChanged}" Header="Value 10 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[10], UpdateSourceTrigger=PropertyChanged}" Header="Value 11 " />
                <DataGridTextColumn Binding="{Binding FunctionParams[11], UpdateSourceTrigger=PropertyChanged}" Header="Value 12 " />

            </DataGrid.Columns>

        </DataGrid>
    </Grid>

</Window>
